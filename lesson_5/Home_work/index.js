// ЗАДАНИЯ
// 1. Сделайте функцию, которая возвращает квадрат числа. Число передается параметром.

// let squareIt = (a, b) => a ** b;
// console.log(squareIt(5, 5));        // 25

// 2. Сделайте функцию, которая возвращает сумму двух чисел.

// let sum = (a, b) => a + b;
// console.log(sum(6, 7));           // 13

// 3. Сделайте функцию, которая отнимает от первого числа второе и делит на третье.

// let num = (a, b, c) => (a - b) / c;
// console.log(num(18, 6, 2));              // 6

// 4. Сделайте функцию, которая принимает параметром число от 1 до 7, а возвращает день недели на русском языке.

// let dayWeek = (num) => {
//   switch (num) {
//     case 1:
//       console.log('Понедельник');
//       break;
//     case 2:
//       console.log('Вторник');
//       break;
//     case 3:
//       console.log('Среда');
//       break;
//     case 4:
//       console.log('Четверг');
//       break;
//     case 5:
//       console.log('Пятница');
//       break;
//     case 6:
//       console.log('Суббота');
//       break;
//     case 7:
//       console.log('Воскресенье');
//       break;
//     default:
//       console.log('Нет такого дня недели');
//   }
// };
// dayWeek(6);          // Суббота

// 5. Сделайте функцию, которая параметрами принимает 2 числа. Если эти числа равны - пусть функция вернет true, а если не равны - false.

// let num = (a, b) => {
//   if (a === b) {
//     return true;
//   } else {
//     return false;
//   }
// };
// console.log(num(7, 7));    // true

// 6. Сделайте функцию, которая параметрами принимает 2 числа. Если их сумма больше 10 - пусть вернет true, а если нет то - false.

// let numSum = (a, b) => {
//   sum = a + b;
//   if (sum > 10) {
//     return true;
//   } else {
//     return false;
//   }
// };
// console.log(numSum(9, 9));   // true

// 7. Сделайте функцию, которая параметром принимает число и проверяет - отрицательное оно или нет. Если отрицательное - пусть функция вернет true, а если нет - false.

// let numNegative = (a) => {
//   if (a < 0) {
//     return true;
//   } else {
//     return false;
//   }
// };
// console.log(numNegative(-3));     // true

// 8. Сделайте функцию isNumberInRange, которая параметром принимает число и проверяет, что оно больше нуля и меньше 10. Если это так - пусть функция возвращает true, если не так - false.

// let isNumberInRange = (num) => {
//   if (num > 0 && num < 10) {
//     return true;
//   } else {
//     return false;
//   }
// };
// console.log(isNumberInRange(9));        // true

// 9. Дан массив с числами. Запишите в новый массив только те числа, которые больше нуля и меньше 10-ти. Для этого используйте вспомогательную функцию isNumberInRange из предыдущей задачи.

// let isNumberInRange = (num) => {
//   if (num > 0 && num < 10) {
//     return true;
//   } else {
//     return false;
//   }
// };

// let getNewArr = (arr) => {
//   let newArr = [];

//   for (let i = 0; i < arr.length; i += 1) {
//     if (isNumberInRange(arr[i])) {
//       newArr.push(arr[i]);
//     }
//   }
//   return newArr;
// };

// console.log(getNewArr([-13, -2, 0, 4, 5, 7, 9, 11]));      // [4, 5, 7, 9]

// 10. Сделайте функцию getDigitsSum (digit - это цифра), которая параметром принимает целое число и возвращает сумму его цифр.

// let getDigitsSum = (digit) => {
//   let sumDigit = 0;
//   digit = String(digit);
//   for (let i = 0; i < digit.length; i += 1) {
//     sumDigit = sumDigit + Number(digit[i]);
//   }
//   return sumDigit;
// };

// console.log(getDigitsSum(634));           // 13

// 11. Найдите все года от 1 до 2020, сумма цифр которых равна 13. Для этого используйте вспомогательную функцию getDigitsSum из предыдущей задачи.

// let getDigitsSum = (digit) => {
//   let sumDigit = 0;
//   digit = String(digit);
//   for (let i = 0; i < digit.length; i += 1) {
//     sumDigit = sumDigit + +digit[i];
//   }
//   return sumDigit;
// };

// for (let j = 1; j < 2020; j += 1) {
//   if (getDigitsSum([j]) === 13) {
//     console.log(j);
//   }
// }           // 49 58 67 76 85 94 139 148 157 166 175 184 193 229 238 247 256 265 274 283 292 319 328 337 346 355 364 373 382 391 409 418 427 436 445 454 463 472 481 490 508 517 526 535 544 553 562 571 580 607 616 625 634 643 652 661 670 706 715 724 733 742 751 760 805 814 823 832 841 850 904 913 922 931 940 1039 1048 1057 1066 1075 1084 1093 1129 1138 1147 1156 1165 1174 1183 1192 1219 1228 1237 1246 1255 1264 1273 1282 1291 1309 1318 1327 1336 1345 1354 1363 1372 1381 1390 1408 1417 1426 1435 1444 1453 1462 1471 1480 1507 1516 1525 1534 1543 1552 1561 1570 1606 1615 1624 1633 1642 1651 1660 1705 1714 1723 1732 1750 1813 1840 1903 1912 1921 1930

// 12. Сделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет: четное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.

// let isEven = (even) => {
//   if (even % 2 === 0) {
//     return true;
//   } else {
//     return false;
//   }
// };
// console.log(isEven(12));   // true

// 13. Дан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел. Для этого используйте вспомогательную функцию isEven из предыдущей задачи.

// 14. Сделайте функцию getDivisors, которая параметром принимает число и возвращает массив его делителей (чисел, на которое делится данное число).

// 15. Дан массив с числами. Выведите последовательно его элементы.

// 16. Дано число. Сложите его цифры. Если сумма получилась более 9-ти, опять сложите его цифры. И так, пока сумма не станет однозначным числом (9 и менее).
