// ЗАДАЧА 1. Реализовать таймер-функцию используя замыкания. Функция принимает два  аргумента начальное значение и значение завершения. Таймер движется назад.
// Пример:
// foo(start, end).
// При достижении точки завершения в консоль выводится значение таймера и сообщение о завершении работы таймера.

////////////////////////////////////////////////////////////////////////////////////
// ЗАДАЧА 2. Что выведет функция?
// Function f() {
//   alert( this ); // ?
// }

// let user = {
//   g: f.bind(null)
// };

// user.g();

////////////////////////////////////////////////////////////////////////////////////
// ЗАДАЧА 3. Можем ли мы изменить this дополнительным связыванием?
// function f() {
//   return this.name;
// }

// f = f.bind({ name: 'Вася' }).bind({ name: 'Петя' });

// console.log(f()); //  Вася

////////////////////////////////////////////////////////////////////////////////////
// ЗАДАЧА 4. В свойство функции записано значение. Изменится ли оно после применения bind? Обоснуйте ответ.
// function sayHi() {
//   alert( this.name );
// }
// sayHi.test = 5;

// let bound = sayHi.bind({
//   name: "Вася"
// });

// alert( bound.test ); // что выведет? почему?

////////////////////////////////////////////////////////////////////////////////////
// ЗАДАЧА 5. Вызов askPassword() в приведённом ниже коде должен проверить пароль и затем вызвать user.loginOk/loginFail в зависимости от ответа.

// Однако, его вызов приводит к ошибке. Почему?

// function askPassword(ok, fail) {
//   let password = prompt('Password?', '');
//   if (password == 'rockstar') ok();
//   else fail();
// }

// let user = {
//   name: 'Вася',

//   loginOk() {
//     console.log(`${this.name} logged in`);
//   },

//   loginFail() {
//     console.log(`${this.name} failed to log in`);
//   },
// };

// askPassword(user.(loginOk), user.(loginFail));

////////////////////////////////////////////////////////////////////////////////////
// ЗАДАЧА 6. Объект user был изменён. Теперь вместо двух функций loginOk/loginFail у него есть только одна – user.login(true/false).

// Что нужно передать в вызов функции askPassword в коде ниже, чтобы она могла вызывать функцию user.login(true) как ok и функцию user.login(false) как fail?

// function askPassword(ok, fail) {
//   let password = prompt('Password?', '');
//   if (password == 'rockstar') ok();
//   else fail();
// }

// let user = {
//   name: 'John',

//   login(result) {
//     alert(this.name + (result ? ' logged in' : ' failed to log in'));
//   },
// };

// askPassword(5, 7); // ?

////////////////////////////////////////////////////////////////////////////////////
// ЗАДАЧА 8.Напишите в указанном месте конструкцию с методом bind() так, чтобы this внутри функции func всегда указывал на value есть функция const sum = (a, b, c) => a + b + c, которая складывает три числа.из переменной elem.

// var elem = { value: 'Привет' };

// function func(surname, name) {
//   return this.value + ', ' + surname + ' ' + name;
// }

// const func1 = func.bind(elem);

// console.log(func1('Иванов', 'Иван')); //тут должно вывести 'привет, Иванов Иван'
// console.log(func1('Петров', 'Петр')); //тут должно вывести 'привет, Петров Петр'

////////////////////////////////////////////////////////////////////////////////////
// ЗАДАЧА 9. Есть функция которая складывает три числа.
// const sum = (a, b, c) => a + b + c
// Выполните каррирование.

// function example(a) {
//     return function (b) {
//       return function (c) {
//         return a + b + c;
//       };
//     };
//   }

//   console.log(example(3)(4)(5));  //  12

////////////////////////////////////////////////////////////////////////////////////////////////////////////
